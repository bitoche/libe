package ru.miit.libe.services;

import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;

public class RandomService {

    public static int randBetween(int val, int val2) {
        if (val >= val2) {
            throw new IllegalArgumentException("val должно быть меньше val2");
        }
        Random r = new Random();
        var number = r.nextInt(val2 - val + 1) + val;
        return number;
    }

    public static String randFrom(List<String> values){
        int size = values.size();
        return values.get(randBetween(0,size-1));
    }


    public static <T> List<T> selectRandObjectsFrom(List<T> objectsToSelect, int countToSelect) {
        if (objectsToSelect == null || objectsToSelect.isEmpty()) {
            throw new IllegalArgumentException("Список не может быть пустым или null");
        }
        if (countToSelect <= 0) {
            throw new IllegalArgumentException("countToSelect должно быть положительным числом");
        }

        // Ограничиваем countToSelect размером списка
        countToSelect = Math.min(countToSelect, objectsToSelect.size());

        // Создаем копию списка, чтобы не изменять оригинал
        List<T> copy = new ArrayList<>(objectsToSelect);
        List<T> ret = new ArrayList<>();

        Random random = new Random();
        for (int i = 0; i < countToSelect; i++) {
            // Выбираем случайный индекс из оставшихся элементов
            int randomIndex = random.nextInt(copy.size());
            ret.add(copy.get(randomIndex));
            // Удаляем выбранный элемент, чтобы избежать повторов
            copy.remove(randomIndex);
        }

        return ret;
    }

    public static Date generateRandomDate(int fromYearsAgo) {
        // Получаем текущую дату
        LocalDate now = LocalDate.now();
        // Вычитаем fromYearsAgo лет, чтобы получить минимальную дату
        LocalDate hundredYearsAgo = now.minusYears(fromYearsAgo);

        // Вычисляем количество дней между минимальной и текущей датой
        long daysBetween = ChronoUnit.DAYS.between(hundredYearsAgo, now);

        // Генерируем случайное количество дней в этом диапазоне
        Random random = new Random();
        long randomDays = random.nextInt((int) daysBetween);

        // Создаем случайную дату
        LocalDate randomDate = hundredYearsAgo.plusDays(randomDays);

        // Преобразуем LocalDate в Date (если нужно)
        return Date.from(randomDate.atStartOfDay(ZoneId.systemDefault()).toInstant());
    }
    public static String generateRandomSymbols(String startsWith, int countAfter){
        StringBuilder gen = new StringBuilder(startsWith);
        for (int i = 0; i < countAfter; i++) {
            gen.append(generateRandomSymbol());
        }
        return gen.toString();
    }
    public static char generateRandomSymbol(){
        return RANDOM_SYMBOLS.charAt(randBetween(0, RANDOM_SYMBOLS.length()-1));
    }

    public static String generateRandomPhrase(){
        return randFrom(ADJECTIVES)+" "+randFrom(NOUNS)+" "+randFrom(VERBS);
    }

    public static String RANDOM_SYMBOLS = "1234567890-qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM";

    public static List<String> FEM_NAMES = List.of(
            "Евгения", "Яна", "Анна", "Валерия", "Виктория", "Галина", "Дарья", "Екатерина", "Ирина",
            "Ксения", "Лариса", "Лидия", "Марина", "Маргарита", "Мария", "Надежда", "Наталья", "Ольга",
            "Светлана", "София", "Татьяна", "Ульяна", "Юлия", "Алиса", "Вера", "Елена", "Зоя", "Карина",
            "Любовь", "Людмила", "Нина", "Оксана", "Полина", "Раиса", "Эльвира", "Юлиана", "Агата",
            "Адель", "Алла", "Амалия", "Ангелина", "Василиса", "Елизавета", "Жанна", "Зарина", "Инна",
            "Камилла"
    );

    public static List<String> MALE_NAMES = List.of(
            "Андрей", "Алексей", "Михаил", "Артур", "Константин", "Евгений", "Ян", "Борис", "Валентин",
            "Виктор", "Владимир", "Денис", "Дмитрий", "Иван", "Кирилл", "Лев", "Никита", "Николай",
            "Олег", "Павел", "Петр", "Роман", "Сергей", "Станислав", "Тимофей", "Федор", "Юрий",
            "Анатолий", "Антон", "Василий", "Георгий", "Григорий", "Даниил", "Захар", "Игорь", "Клим",
            "Максим", "Матвей", "Руслан", "Савелий", "Семен", "Степан", "Тарас", "Тимур", "Филипп",
            "Эдуард", "Ярослав", "Альберт", "Аркадий", "Артем", "Богдан", "Вадим", "Виталий",
            "Владислав", "Глеб", "Давид", "Илья"
    );

    public static List<String> FEM_SURNAMES = List.of(
            "Иванова", "Смирнова", "Кузнецова", "Попова", "Васильева", "Петрова", "Соколова", "Михайлова", "Новикова", "Федорова",
            "Морозова", "Волкова", "Алексеева", "Лебедева", "Семенова", "Егорова", "Павлова", "Козлова", "Степанова", "Николаева",
            "Орлова", "Андреева", "Макарова", "Никитина", "Захарова", "Зайцева", "Соловьева", "Борисова", "Яковлева", "Григорьева",
            "Романова", "Воробьева", "Сергеева", "Кузьмина", "Фролова", "Александрова", "Дмитриева", "Королева", "Гусева", "Киселева",
            "Ильина", "Максимова", "Полякова", "Сорокина", "Виноградова", "Ковалева", "Белова", "Медведева", "Антонова", "Тарасова",
            "Жукова", "Баранова", "Филиппова", "Комарова", "Давыдова", "Беляева", "Герасимова", "Богданова", "Осипова", "Сидорова",
            "Матвеева", "Титова", "Маркова", "Миронова", "Крылова", "Куликова", "Карпова", "Власова", "Мельникова", "Денисова",
            "Гаврилова", "Тихонова", "Казакова", "Афанасьева", "Данилова", "Савельева", "Тимофеева", "Фомина", "Чернова", "Абрамова",
            "Мартынова", "Ефимова", "Щербакова", "Назарова", "Калинина", "Исаева", "Чернышева", "Быкова", "Маслова", "Родионова",
            "Коновалова", "Лазарева", "Воронина", "Климова", "Филатова", "Пономарева", "Голубева", "Кудрявцева", "Прохорова", "Наумова",
            "Потапова", "Журавлева", "Овчинникова", "Трофимова", "Леонова", "Соболева", "Ермакова", "Колесникова", "Гончарова", "Емельянова"
    );

    public static List<String> MALE_SURNAMES = List.of(
            "Иванов", "Смирнов", "Кузнецов", "Попов", "Васильев", "Петров", "Соколов", "Михайлов", "Новиков", "Федоров",
            "Морозов", "Волков", "Алексеев", "Лебедев", "Семенов", "Егоров", "Павлов", "Козлов", "Степанов", "Николаев",
            "Орлов", "Андреев", "Макаров", "Никитин", "Захаров", "Зайцев", "Соловьев", "Борисов", "Яковлев", "Григорьев",
            "Романов", "Воробьев", "Сергеев", "Кузьмин", "Фролов", "Александров", "Дмитриев", "Королев", "Гусев", "Киселев",
            "Ильин", "Максимов", "Поляков", "Сорокин", "Виноградов", "Ковалев", "Белов", "Медведев", "Антонов", "Тарасов",
            "Жуков", "Баранов", "Филиппов", "Комаров", "Давыдов", "Беляев", "Герасимов", "Богданов", "Осипов", "Сидоров",
            "Матвеев", "Титов", "Марков", "Миронов", "Крылов", "Куликов", "Карпов", "Власов", "Мельников", "Денисов",
            "Гаврилов", "Тихонов", "Казаков", "Афанасьев", "Данилов", "Савельев", "Тимофеев", "Фомин", "Чернов", "Абрамов",
            "Мартынов", "Ефимов", "Щербаков", "Назаров", "Калинин", "Исаев", "Чернышев", "Быков", "Маслов", "Родионов",
            "Коновалов", "Лазарев", "Воронин", "Климов", "Филатов", "Пономарев", "Голубев", "Кудрявцев", "Прохоров", "Наумов",
            "Потапов", "Журавлев", "Овчинников", "Трофимов", "Леонов", "Соболев", "Ермаков", "Колесников", "Гончаров", "Емельянов"
    );

    public static List<String> FEM_PATRONYMICS = List.of(
            "Андреевна", "Алексеевна", "Михайловна", "Артуровна", "Константиновна", "Евгеньевна", "Борисовна", "Валентиновна",
            "Валерьевна", "Викторовна", "Владимировна", "Галиновна", "Дарьевна", "Денисовна", "Дмитриевна", "Ивановна",
            "Кирилловна", "Ларисовна", "Львовна", "Никитична", "Николаевна", "Олеговна", "Павловна", "Петровна", "Романовна",
            "Сергеевна", "Софиевна", "Станиславовна", "Тимофеевна", "Федоровна", "Юрьевна", "Анатольевна", "Антоновна",
            "Георгиевна", "Григорьевна", "Данииловна", "Захаровна", "Игоревна", "Климовна", "Максимовна", "Матвеевна",
            "Руслановна", "Савельевна", "Семеновна", "Степановна", "Тарасовна", "Тимуровна", "Филипповна", "Эдуардовна",
            "Ярославовна", "Альбертовна", "Аркадиевна", "Артемовна", "Богдановна", "Вадимовна", "Витальевна", "Владиславовна",
            "Глебовна", "Давидовна", "Жанновна", "Ильинична"
    );

    public static List<String> MALE_PATRONYMICS = List.of(
            "Андреевич", "Алексеевич", "Михайлович", "Артурович", "Константинович", "Евгеньевич", "Борисович", "Валентинович",
            "Валерьевич", "Викторович", "Владимирович", "Галинович", "Дарьевич", "Денисович", "Дмитриевич", "Иванович",
            "Кириллович", "Ларисович", "Львович", "Никитич", "Николаевич", "Олегович", "Павлович", "Петрович", "Романович",
            "Сергеевич", "Софиевич", "Станиславович", "Тимофеевич", "Федорович", "Юрьевич", "Анатольевич", "Антонович",
            "Георгиевич", "Григорьевич", "Даниилович", "Захарович", "Игоревич", "Климович", "Максимович", "Матвеевич",
            "Русланович", "Савельевич", "Семенович", "Степанович", "Тарасович", "Тимурович", "Филиппович", "Эдуардович",
            "Ярославович", "Альбертович", "Аркадиевич", "Артемович", "Богданович", "Вадимович", "Витальевич", "Владиславович",
            "Глебович", "Давидович", "Жаннович", "Ильич"
    );

    public static List<String> NOUNS = List.of(
            "дом", "кот", "лес", "город", "книга", "ручка", "окно", "цветок", "солнце", "море",
            "гора", "река", "птица", "собака", "машина", "дорога", "поле", "звезда", "луна", "ветер",
            "дождь", "снег", "огонь", "вода", "земля", "воздух", "камень", "песок", "трава", "лист",
            "дерево", "плод", "яблоко", "груша", "вишня", "слива", "абрикос", "персик", "виноград", "арбуз",
            "дыня", "тыква", "морковь", "картофель", "помидор", "огурец", "лук", "чеснок", "перец", "ребенок"
    );

    public static List<String> ADJECTIVES = List.of(
            "большой", "маленький", "яркий", "тихий", "шумный", "теплый", "холодный", "мягкий", "твердый", "легкий",
            "тяжелый", "красивый", "уродливый", "высокий", "низкий", "широкий", "узкий", "длинный", "короткий", "глубокий",
            "мелкий", "чистый", "грязный", "светлый", "темный", "новый", "старый", "молодой", "быстрый", "медленный",
            "сильный", "слабый", "горячий", "холодный", "влажный", "сухой", "сладкий", "кислый", "соленый", "горький",
            "острый", "тупой", "гладкий", "шершавый", "прозрачный", "мутный", "живой", "мертвый", "пушистый", "зеленый"
    );

    public static List<String> VERBS = List.of(
            "стоит", "лежит", "бежит", "летит", "плывет", "горит", "светит", "шумит", "шелестит", "растет",
            "цветет", "падает", "поднимается", "опускается", "катится", "вращается", "движется", "останавливается", "замерзает", "тает",
            "испаряется", "конденсируется", "созревает", "зреет", "пахнет", "вкусно", "горько", "сладко", "кисло", "солено",
            "остро", "тупо", "гладко", "шершаво", "прозрачно", "мутно", "живет", "умирает", "пушится", "колышется",
            "сверкает", "мерцает", "гремит", "свистит", "жужжит", "поет", "кричит", "шепчет", "смеется", "плачет"
    );
}
